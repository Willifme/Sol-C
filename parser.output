Terminals which are not used

   T_IF
   T_NULL
   T_RETURN
   T_COMMA
   T_COMMENT
   UMINUS


Grammar

    0 $accept: main $end

    1 main: expression
    2     | statement
    3     | main expression
    4     | main statement

    5 statement: func
    6          | T_QUIT

    7 func: T_FUNC T_IDENTIFIER T_LBRACKET T_RBRACKET block

    8 block: T_LSQUIGBRACKET expression T_RSQUIGBRACKET

    9 expression: operator
   10           | T_LBRACKET expression T_RBRACKET

   11 literal: T_INT
   12        | T_STRING
   13        | T_TRUE
   14        | T_FALSE

   15 operator: literal
   16         | operator T_PLUS operator
   17         | operator T_MINUS operator
   18         | operator T_TIMES operator
   19         | operator T_DIVIDE operator


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 11
T_IDENTIFIER (259) 7
T_STRING (260) 12
T_TRUE (261) 13
T_FALSE (262) 14
T_PLUS (263) 16
T_MINUS (264) 17
T_TIMES (265) 18
T_DIVIDE (266) 19
T_LBRACKET (267) 7 10
T_RBRACKET (268) 7 10
T_QUIT (269) 6
T_FUNC (270) 7
T_IF (271)
T_NULL (272)
T_LSQUIGBRACKET (273) 8
T_RSQUIGBRACKET (274) 8
T_RETURN (275)
T_COMMA (276)
T_COMMENT (277)
UMINUS (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
main (25)
    on left: 1 2 3 4, on right: 0 3 4
statement (26)
    on left: 5 6, on right: 2 4
func (27)
    on left: 7, on right: 5
block (28)
    on left: 8, on right: 7
expression (29)
    on left: 9 10, on right: 1 3 8 10
literal (30)
    on left: 11 12 13 14, on right: 15
operator (31)
    on left: 15 16 17 18 19, on right: 9 16 17 18 19


state 0

    0 $accept: . main $end

    T_INT       shift, and go to state 1
    T_STRING    shift, and go to state 2
    T_TRUE      shift, and go to state 3
    T_FALSE     shift, and go to state 4
    T_LBRACKET  shift, and go to state 5
    T_QUIT      shift, and go to state 6
    T_FUNC      shift, and go to state 7

    main        go to state 8
    statement   go to state 9
    func        go to state 10
    expression  go to state 11
    literal     go to state 12
    operator    go to state 13


state 1

   11 literal: T_INT .

    $default  reduce using rule 11 (literal)


state 2

   12 literal: T_STRING .

    $default  reduce using rule 12 (literal)


state 3

   13 literal: T_TRUE .

    $default  reduce using rule 13 (literal)


state 4

   14 literal: T_FALSE .

    $default  reduce using rule 14 (literal)


state 5

   10 expression: T_LBRACKET . expression T_RBRACKET

    T_INT       shift, and go to state 1
    T_STRING    shift, and go to state 2
    T_TRUE      shift, and go to state 3
    T_FALSE     shift, and go to state 4
    T_LBRACKET  shift, and go to state 5

    expression  go to state 14
    literal     go to state 12
    operator    go to state 13


state 6

    6 statement: T_QUIT .

    $default  reduce using rule 6 (statement)


state 7

    7 func: T_FUNC . T_IDENTIFIER T_LBRACKET T_RBRACKET block

    T_IDENTIFIER  shift, and go to state 15


state 8

    0 $accept: main . $end
    3 main: main . expression
    4     | main . statement

    $end        shift, and go to state 16
    T_INT       shift, and go to state 1
    T_STRING    shift, and go to state 2
    T_TRUE      shift, and go to state 3
    T_FALSE     shift, and go to state 4
    T_LBRACKET  shift, and go to state 5
    T_QUIT      shift, and go to state 6
    T_FUNC      shift, and go to state 7

    statement   go to state 17
    func        go to state 10
    expression  go to state 18
    literal     go to state 12
    operator    go to state 13


state 9

    2 main: statement .

    $default  reduce using rule 2 (main)


state 10

    5 statement: func .

    $default  reduce using rule 5 (statement)


state 11

    1 main: expression .

    $default  reduce using rule 1 (main)


state 12

   15 operator: literal .

    $default  reduce using rule 15 (operator)


state 13

    9 expression: operator .
   16 operator: operator . T_PLUS operator
   17         | operator . T_MINUS operator
   18         | operator . T_TIMES operator
   19         | operator . T_DIVIDE operator

    T_PLUS    shift, and go to state 19
    T_MINUS   shift, and go to state 20
    T_TIMES   shift, and go to state 21
    T_DIVIDE  shift, and go to state 22

    $default  reduce using rule 9 (expression)


state 14

   10 expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 23


state 15

    7 func: T_FUNC T_IDENTIFIER . T_LBRACKET T_RBRACKET block

    T_LBRACKET  shift, and go to state 24


state 16

    0 $accept: main $end .

    $default  accept


state 17

    4 main: main statement .

    $default  reduce using rule 4 (main)


state 18

    3 main: main expression .

    $default  reduce using rule 3 (main)


state 19

   16 operator: operator T_PLUS . operator

    T_INT     shift, and go to state 1
    T_STRING  shift, and go to state 2
    T_TRUE    shift, and go to state 3
    T_FALSE   shift, and go to state 4

    literal   go to state 12
    operator  go to state 25


state 20

   17 operator: operator T_MINUS . operator

    T_INT     shift, and go to state 1
    T_STRING  shift, and go to state 2
    T_TRUE    shift, and go to state 3
    T_FALSE   shift, and go to state 4

    literal   go to state 12
    operator  go to state 26


state 21

   18 operator: operator T_TIMES . operator

    T_INT     shift, and go to state 1
    T_STRING  shift, and go to state 2
    T_TRUE    shift, and go to state 3
    T_FALSE   shift, and go to state 4

    literal   go to state 12
    operator  go to state 27


state 22

   19 operator: operator T_DIVIDE . operator

    T_INT     shift, and go to state 1
    T_STRING  shift, and go to state 2
    T_TRUE    shift, and go to state 3
    T_FALSE   shift, and go to state 4

    literal   go to state 12
    operator  go to state 28


state 23

   10 expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 10 (expression)


state 24

    7 func: T_FUNC T_IDENTIFIER T_LBRACKET . T_RBRACKET block

    T_RBRACKET  shift, and go to state 29


state 25

   16 operator: operator . T_PLUS operator
   16         | operator T_PLUS operator .
   17         | operator . T_MINUS operator
   18         | operator . T_TIMES operator
   19         | operator . T_DIVIDE operator

    T_TIMES   shift, and go to state 21
    T_DIVIDE  shift, and go to state 22

    $default  reduce using rule 16 (operator)


state 26

   16 operator: operator . T_PLUS operator
   17         | operator . T_MINUS operator
   17         | operator T_MINUS operator .
   18         | operator . T_TIMES operator
   19         | operator . T_DIVIDE operator

    T_TIMES   shift, and go to state 21
    T_DIVIDE  shift, and go to state 22

    $default  reduce using rule 17 (operator)


state 27

   16 operator: operator . T_PLUS operator
   17         | operator . T_MINUS operator
   18         | operator . T_TIMES operator
   18         | operator T_TIMES operator .
   19         | operator . T_DIVIDE operator

    $default  reduce using rule 18 (operator)


state 28

   16 operator: operator . T_PLUS operator
   17         | operator . T_MINUS operator
   18         | operator . T_TIMES operator
   19         | operator . T_DIVIDE operator
   19         | operator T_DIVIDE operator .

    $default  reduce using rule 19 (operator)


state 29

    7 func: T_FUNC T_IDENTIFIER T_LBRACKET T_RBRACKET . block

    T_LSQUIGBRACKET  shift, and go to state 30

    block  go to state 31


state 30

    8 block: T_LSQUIGBRACKET . expression T_RSQUIGBRACKET

    T_INT       shift, and go to state 1
    T_STRING    shift, and go to state 2
    T_TRUE      shift, and go to state 3
    T_FALSE     shift, and go to state 4
    T_LBRACKET  shift, and go to state 5

    expression  go to state 32
    literal     go to state 12
    operator    go to state 13


state 31

    7 func: T_FUNC T_IDENTIFIER T_LBRACKET T_RBRACKET block .

    $default  reduce using rule 7 (func)


state 32

    8 block: T_LSQUIGBRACKET expression . T_RSQUIGBRACKET

    T_RSQUIGBRACKET  shift, and go to state 33


state 33

    8 block: T_LSQUIGBRACKET expression T_RSQUIGBRACKET .

    $default  reduce using rule 8 (block)
